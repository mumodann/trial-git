{"ast":null,"code":"var _jsxFileName = \"/home/mumo/Documents/site/front/src/components/list/List.jsx\",\n    _s = $RefreshSig$();\n\nimport { ArrowBackIosOutlined, ArrowForwardIosOutlined } from '@material-ui/icons';\nimport React, { useRef, useState } from 'react';\nimport ListItem from \"../listItem/ListItem\";\nimport \"./list.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List({\n  list\n}) {\n  _s();\n\n  const [isMoved, setIsMoved] = useState(false);\n  const [slideNumber, setSLideNumber] = useState(0);\n  const listRef = useRef();\n\n  const handleClick = direction => {\n    setIsMoved(true);\n    let distance = listRef.current.getBoundingClientRect().x - 50;\n\n    if (direction === \"left\" && slideNumber > 0) {\n      setSLideNumber(slideNumber - 1);\n      listRef.current.style.transform = `translateX(${230 + distance}px)`;\n    }\n\n    if (direction === \"right\" && slideNumber < 5) {\n      setSLideNumber(slideNumber + 1);\n      listRef.current.style.transform = `translateX(${-230 + distance}px)`;\n    }\n\n    console.log(distance);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"listTitle\",\n      children: list.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(ArrowBackIosOutlined, {\n        className: \"sliderArrow left\",\n        onClick: () => handleClick(\"left\"),\n        style: {\n          display: !isMoved && \"none\"\n        },\n        style4: {\n          display: !isMoved && \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        ref: listRef,\n        children: list.content.map((item, i) => {\n          /*#__PURE__*/\n          _jsxDEV(ListItem, {\n            index: i,\n            item: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosOutlined, {\n        className: \"sliderArrow right\",\n        onClick: () => handleClick(\"right\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"YWMcRtjCo28Wn0fVTFHHZJRQlMM=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/mumo/Documents/site/front/src/components/list/List.jsx"],"names":["ArrowBackIosOutlined","ArrowForwardIosOutlined","React","useRef","useState","ListItem","List","list","isMoved","setIsMoved","slideNumber","setSLideNumber","listRef","handleClick","direction","distance","current","getBoundingClientRect","x","style","transform","console","log","title","display","content","map","item","i"],"mappings":";;;AAAA,SAASA,oBAAT,EAA+BC,uBAA/B,QAA8D,oBAA9D;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAsB;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAMQ,OAAO,GAAGT,MAAM,EAAtB;;AAIA,QAAMU,WAAW,GAAIC,SAAD,IAAc;AAC9BL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIM,QAAQ,GAAGH,OAAO,CAACI,OAAR,CAAgBC,qBAAhB,GAAwCC,CAAxC,GAA4C,EAA3D;;AACA,QAAIJ,SAAS,KAAK,MAAd,IAAwBJ,WAAW,GAAG,CAA1C,EAA4C;AACxCC,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACAE,MAAAA,OAAO,CAACI,OAAR,CAAgBG,KAAhB,CAAsBC,SAAtB,GAAmC,cAAa,MAAML,QAAS,KAA/D;AACH;;AACD,QAAID,SAAS,KAAK,OAAd,IAAyBJ,WAAW,GAAG,CAA3C,EAA6C;AACzCC,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACAE,MAAAA,OAAO,CAACI,OAAR,CAAgBG,KAAhB,CAAsBC,SAAtB,GAAmC,cAAa,CAAC,GAAD,GAAOL,QAAS,KAAhE;AACH;;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACH,GAZD;;AAaF,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BR,IAAI,CAACgB;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI,QAAC,oBAAD;AAAsB,QAAA,SAAS,EAAC,kBAAhC;AACA,QAAA,OAAO,EAAE,MAAIV,WAAW,CAAC,MAAD,CADxB;AAEA,QAAA,KAAK,EAAI;AAACW,UAAAA,OAAO,EAAE,CAAChB,OAAD,IAAY;AAAtB,SAFT;AAGA,QAAA,MAAM,EAAI;AAACgB,UAAAA,OAAO,EAAE,CAAChB,OAAD,IAAY;AAAtB;AAHV;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAEI,OAAhC;AAAA,kBACKL,IAAI,CAACkB,OAAL,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,CAAP,KAAW;AACzB;AAAA,kBAAC,QAAD;AAAU,YAAA,KAAK,EAAEA,CAAjB;AAAoB,YAAA,IAAI,EAAED;AAA1B;AAAA;AAAA;AAAA;AAAA;AACH,SAFA;AADL;AAAA;AAAA;AAAA;AAAA,cAPJ,eAYI,QAAC,uBAAD;AAAyB,QAAA,SAAS,EAAC,mBAAnC;AAAuD,QAAA,OAAO,EAAE,MAAId,WAAW,CAAC,OAAD;AAA/E;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA1CuBP,I;;KAAAA,I","sourcesContent":["import { ArrowBackIosOutlined, ArrowForwardIosOutlined } from '@material-ui/icons';\nimport React, { useRef, useState } from 'react'\nimport ListItem from \"../listItem/ListItem\";\nimport \"./list.scss\";\n\nexport default function List({list}) {\n    const [isMoved, setIsMoved] = useState(false);\n    const [slideNumber, setSLideNumber] = useState(0)\n\n    const listRef = useRef(\n\n    )\n    \n    const handleClick = (direction) =>{\n        setIsMoved(true);\n        let distance = listRef.current.getBoundingClientRect().x - 50\n        if (direction === \"left\" && slideNumber > 0){\n            setSLideNumber(slideNumber - 1)\n            listRef.current.style.transform = `translateX(${230 + distance}px)`\n        }\n        if (direction === \"right\" && slideNumber < 5){\n            setSLideNumber(slideNumber + 1)\n            listRef.current.style.transform = `translateX(${-230 + distance}px)`\n        }\n        console.log(distance)\n    }\n  return (\n    <div className=\"list\">\n        <span className=\"listTitle\">{list.title}</span>\n        <div className=\"wrapper\">\n            <ArrowBackIosOutlined className=\"sliderArrow left\" \n            onClick={()=>handleClick(\"left\")}\n            style = {{display: !isMoved && \"none\"}}\n            style4 = {{display: !isMoved && \"none\"}}\n            \n            />\n            <div className=\"container\" ref={listRef}>\n                {list.content.map((item, i)=>{\n                    <ListItem index={i} item={item}/>\n                })}\n            </div>\n            <ArrowForwardIosOutlined className=\"sliderArrow right\" onClick={()=>handleClick(\"right\")}/>\n        </div>\n    </div>\n  )\n\n  \n}\n\n"]},"metadata":{},"sourceType":"module"}